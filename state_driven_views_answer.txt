State-driven applications allow developers to define and build the structure of an application with more ease by dividing it into manageable application tree paths that respond to behaviors translated into state. They are useful because they allow  developers to work on individual application states without having to worry about impacting other states, they make testing easier, and they make it easier to visualize the structure of the application at all times. Similarly, React applications are built with components which, depending on state, can be built in isolation, and can be rendered based on different states.